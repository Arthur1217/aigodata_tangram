----------------------------------
-- SELECT TEST TABLES
----------------------------------
DROP TABLE IF EXISTS SELECT_TABLE;
CREATE TABLE SELECT_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', AGE INT);

-- SELECT_TABLE
INSERT INTO SELECT_TABLE VALUES(1, 'Ada', 10);
INSERT INTO SELECT_TABLE VALUES(2, 'Kate', 99);
INSERT INTO SELECT_TABLE VALUES(3, 'Brenda', 30);
INSERT INTO SELECT_TABLE VALUES(4, 'Anne', 45);
INSERT INTO SELECT_TABLE VALUES(5, 'Nick', 99);
INSERT INTO SELECT_TABLE VALUES(6, 'Perry', 60);


----------------------------------
-- SELECT DISTINCT TEST TABLES
----------------------------------
DROP TABLE IF EXISTS SELECT_DISTINCT_TABLE;
CREATE TABLE SELECT_DISTINCT_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- SELECT_DISTINCT_TABLE
INSERT INTO SELECT_DISTINCT_TABLE VALUES(1, 'Ada');
INSERT INTO SELECT_DISTINCT_TABLE VALUES(2, 'Kate');
INSERT INTO SELECT_DISTINCT_TABLE VALUES(3, 'Kate');


----------------------------------
-- INSERT TEST TABLES
----------------------------------
DROP TABLE IF EXISTS INSERT_TABLE;
CREATE TABLE INSERT_TABLE(ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', BIRTH DATE, CREATE_TIME TIMESTAMP);


----------------------------------
-- UPDATE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS UPDATE_TABLE;
CREATE TABLE UPDATE_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- UPDATE_TABLE
INSERT INTO UPDATE_TABLE VALUES(1, 'Ada');


----------------------------------
-- DELETE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS DELETE_TABLE;
CREATE TABLE DELETE_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- DELETE_TABLE
INSERT INTO DELETE_TABLE VALUES(1, 'Ada');


----------------------------------
-- JOIN TEST TABLES
----------------------------------
DROP TABLE IF EXISTS JOIN_TABLE_1;
CREATE TABLE JOIN_TABLE_1(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_2_ID INT, ANOTHER_TABLE_2_ID INT, TABLE_3_ID INT, ANOTHER_TABLE_3_ID INT);

DROP TABLE IF EXISTS JOIN_TABLE_2;
CREATE TABLE JOIN_TABLE_2(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_3_ID INT);

DROP TABLE IF EXISTS JOIN_TABLE_3;
CREATE TABLE JOIN_TABLE_3(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_2_ID INT);

DROP TABLE IF EXISTS JOIN_TABLE_4;
CREATE TABLE JOIN_TABLE_4(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_4_ID INT, ANOTHER_TABLE_4_ID INT);

-- JOIN_TABLE_1
INSERT INTO JOIN_TABLE_1 VALUES(1, 'table1_name1', 1, 2, 3, 2);
INSERT INTO JOIN_TABLE_1 VALUES(2, 'table1_name2', 2, 1, null, 1);
INSERT INTO JOIN_TABLE_1 VALUES(3, 'table1_name3', 3, NULL, 1, 4);
-- JOIN_TABLE_2
INSERT INTO JOIN_TABLE_2 VALUES(1, 'table2_name1', 2);
INSERT INTO JOIN_TABLE_2 VALUES(2, 'table2_name2', null);
INSERT INTO JOIN_TABLE_2 VALUES(3, 'table2_name3', 3);
-- JOIN_TABLE_3
INSERT INTO JOIN_TABLE_3 VALUES(1, 'table3_name1', 3);
INSERT INTO JOIN_TABLE_3 VALUES(2, 'table3_name2', 2);
INSERT INTO JOIN_TABLE_3 VALUES(3, 'table3_name3', 2);
INSERT INTO JOIN_TABLE_3 VALUES(4, 'table3_name4', null);
-- JOIN_TABLE_4
INSERT INTO JOIN_TABLE_4 VALUES(1, 'table4_name1', 1, null);
INSERT INTO JOIN_TABLE_4 VALUES(2, 'table4_name2', 1, 3);
INSERT INTO JOIN_TABLE_4 VALUES(3, 'table4_name3', null, 2);


----------------------------------
-- JOIN TEST TABLES
-- USER USER_ROLE ROLE
----------------------------------
DROP TABLE IF EXISTS USER;
CREATE TABLE USER(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', DETAIL_ID INT);

DROP TABLE IF EXISTS USER_ROLE;
CREATE TABLE USER_ROLE(USER_ID INT, ROLE_ID INT, PRIMARY KEY(USER_ID, ROLE_ID));

DROP TABLE IF EXISTS ROLE;
CREATE TABLE ROLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', DETAIL_ID INT);

DROP TABLE IF EXISTS DETAIL;
CREATE TABLE DETAIL(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS USER_GROUP;
CREATE TABLE USER_GROUP(USER_ID INT, GROUP_ID INT, PRIMARY KEY(USER_ID, GROUP_ID));

DROP TABLE IF EXISTS "GROUP";
CREATE TABLE "GROUP"(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- USER
INSERT INTO USER VALUES(1, 'user1', 1);
INSERT INTO USER VALUES(2, 'user2', 2);
INSERT INTO USER VALUES(3, 'user3', null);
-- USER_ROLE
INSERT INTO USER_ROLE VALUES(1, 1);
INSERT INTO USER_ROLE VALUES(1, 2);
INSERT INTO USER_ROLE VALUES(2, 2);
-- USER_ROLE
INSERT INTO ROLE VALUES(1, 'role1', 1);
INSERT INTO ROLE VALUES(2, 'role2', 2);
-- DETAIL
INSERT INTO DETAIL VALUES(1, 'detail1');
INSERT INTO DETAIL VALUES(2, 'detail2');
-- USER_ROLE
INSERT INTO USER_GROUP VALUES(1, 1);
INSERT INTO USER_GROUP VALUES(2, 1);
INSERT INTO USER_GROUP VALUES(2, 2);
-- USER_ROLE
INSERT INTO "GROUP" VALUES(1, 'group1');
INSERT INTO "GROUP" VALUES(2, 'group2');


----------------------------------
-- FILTER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS FILTER_TABLE_1;
CREATE TABLE FILTER_TABLE_1(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_2_ID INT);

DROP TABLE IF EXISTS FILTER_TABLE_2;
CREATE TABLE FILTER_TABLE_2(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_3_ID INT);

DROP TABLE IF EXISTS FILTER_TABLE_3;
CREATE TABLE FILTER_TABLE_3(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS FILTER_TABLE_4;
CREATE TABLE FILTER_TABLE_4(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', TABLE_3_ID INT);

-- FILTER_TABLE_1
INSERT INTO FILTER_TABLE_1 VALUES(1, 'table1_name1', 1);
INSERT INTO FILTER_TABLE_1 VALUES(2, 'table1_name2', 2);
INSERT INTO FILTER_TABLE_1 VALUES(3, 'table1_name3', 3);
-- FILTER_TABLE_2
INSERT INTO FILTER_TABLE_2 VALUES(1, 'table2_name1', 1);
INSERT INTO FILTER_TABLE_2 VALUES(2, 'table2_name2', 2);
INSERT INTO FILTER_TABLE_2 VALUES(3, 'table2_name3', 3);
-- FILTER_TABLE_3
INSERT INTO FILTER_TABLE_3 VALUES(1, 'table3_name1');
INSERT INTO FILTER_TABLE_3 VALUES(2, 'table3_name2');
INSERT INTO FILTER_TABLE_3 VALUES(3, 'table3_name3');
-- FILTER_TABLE_4
INSERT INTO FILTER_TABLE_4 VALUES(1, 'table4_name1', 1);
INSERT INTO FILTER_TABLE_4 VALUES(2, 'table4_name2', 2);
INSERT INTO FILTER_TABLE_4 VALUES(3, 'table4_name3', 3);


----------------------------------
-- TRANSACTION TEST TABLES
----------------------------------
DROP TABLE IF EXISTS TRANSACTION_TABLE_1;
CREATE TABLE TRANSACTION_TABLE_1(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS TRANSACTION_TABLE_2;
CREATE TABLE TRANSACTION_TABLE_2(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS TRANSACTION_TABLE_3;
CREATE TABLE TRANSACTION_TABLE_3(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS TRANSACTION_TABLE_4;
CREATE TABLE TRANSACTION_TABLE_4(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- TRANSACTION_TABLE_1
INSERT INTO TRANSACTION_TABLE_1 VALUES(1, 'table1_name');
-- TRANSACTION_TABLE_2
INSERT INTO TRANSACTION_TABLE_2 VALUES(1, 'table2_name');
-- TRANSACTION_TABLE_3
INSERT INTO TRANSACTION_TABLE_3 VALUES(1, 'table3_name');
-- TRANSACTION_TABLE_4
INSERT INTO TRANSACTION_TABLE_4 VALUES(1, 'table4_name');


----------------------------------
-- TRANSACTION PLACEHOLDER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS TRANSACTION_PLACEHOLDER_A;
CREATE TABLE TRANSACTION_PLACEHOLDER_A(ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

DROP TABLE IF EXISTS TRANSACTION_PLACEHOLDER_B;
CREATE TABLE TRANSACTION_PLACEHOLDER_B(ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', A_ID INT);


----------------------------------
-- ALIAS TEST TABLES
----------------------------------
DROP TABLE IF EXISTS ALIAS_TABLE_A;
CREATE TABLE ALIAS_TABLE_A(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');
DROP TABLE IF EXISTS ALIAS_TABLE_B;
CREATE TABLE ALIAS_TABLE_B(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', A_ID INT);
DROP TABLE IF EXISTS ALIAS_TABLE_C;
CREATE TABLE ALIAS_TABLE_C(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', A_ID INT);

-- ALIAS_TABLE
INSERT INTO ALIAS_TABLE_A VALUES(1, 'A');
INSERT INTO ALIAS_TABLE_B VALUES(1, 'B', 1);
INSERT INTO ALIAS_TABLE_C VALUES(1, 'B', 1);


----------------------------------
-- DATETIME TEST TABLES
----------------------------------
DROP TABLE IF EXISTS DATETIME_TABLE;
CREATE TABLE DATETIME_TABLE(ID INT PRIMARY KEY, DATE_COL DATE, TIME_COL TIME, TIMESTAMP_COL TIMESTAMP, TIMESTAMP_STR VARCHAR(255), TIMESTAMP_BIGINT BIGINT);

-- DATETIME_TABLE
INSERT INTO DATETIME_TABLE VALUES(1, '2010-01-01', '10:10:10', '2010-01-01 10:10:10', '2010-01-01 10:10:10', 1262311810000);
INSERT INTO DATETIME_TABLE VALUES(2, '2008-02-01', '12:11:10', '2008-02-01 12:11:10', '2008-02-01 12:11:10', 1201839070000);
INSERT INTO DATETIME_TABLE VALUES(3, '2015-11-11', '18:22:16', '2015-02-01 12:22:16', '2015-11-11 18:22:16', 1447237336000);
INSERT INTO DATETIME_TABLE VALUES(4, '2018-06-25', '05:09:33', '2018-06-25 05:09:33', '2018-06-25 05:09:33', 1529874573000);
INSERT INTO DATETIME_TABLE VALUES(5, '2012-06-25', '10:20:30', '2012-06-25 10:20:30', '2012-06-25 10:20:30', 1340590830000);
INSERT INTO DATETIME_TABLE VALUES(6, '2011-06-01', '10:11:10', '2011-06-01 10:11:10', '2011-06-01 10:11:10', 1306894270000);


----------------------------------
-- PERMISSION ALL TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_ALL_TABLE;
CREATE TABLE PERMISSION_ALL_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- RECORDS
INSERT INTO PERMISSION_ALL_TABLE VALUES(1, 'Ada');
INSERT INTO PERMISSION_ALL_TABLE VALUES(2, 'Kate');

----------------------------------
-- PERMISSION QUERY TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_QUERY_TABLE;
CREATE TABLE PERMISSION_QUERY_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- RECORDS
INSERT INTO PERMISSION_QUERY_TABLE VALUES(1, 'Ada');
INSERT INTO PERMISSION_QUERY_TABLE VALUES(2, 'Kate');

----------------------------------
-- PERMISSION ADD TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_ADD_TABLE;
CREATE TABLE PERMISSION_ADD_TABLE(ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

----------------------------------
-- PERMISSION UPDATE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_UPDATE_TABLE;
CREATE TABLE PERMISSION_UPDATE_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- RECORDS
INSERT INTO PERMISSION_UPDATE_TABLE VALUES(1, 'Ada');
INSERT INTO PERMISSION_UPDATE_TABLE VALUES(2, 'Kate');

----------------------------------
-- PERMISSION DELETE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_DELETE_TABLE;
CREATE TABLE PERMISSION_DELETE_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- RECORDS
INSERT INTO PERMISSION_DELETE_TABLE VALUES(1, 'Ada');
INSERT INTO PERMISSION_DELETE_TABLE VALUES(2, 'Kate');

----------------------------------
-- PERMISSION USER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_USER;
CREATE TABLE PERMISSION_USER(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', USER_ID INT);

DROP TABLE IF EXISTS PERMISSION_USER_ROLE;
CREATE TABLE PERMISSION_USER_ROLE(USER_ID INT, ROLE_ID INT, PRIMARY KEY(USER_ID, ROLE_ID));

DROP TABLE IF EXISTS PERMISSION_ROLE;
CREATE TABLE PERMISSION_ROLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '');

-- RECORDS
INSERT INTO PERMISSION_USER VALUES(1, 'Ada', 1);
INSERT INTO PERMISSION_USER VALUES(2, 'Kate', 2);
INSERT INTO PERMISSION_USER VALUES(3, 'Kate', 3);
-- RECORDS
INSERT INTO PERMISSION_USER_ROLE VALUES(1, 1);
INSERT INTO PERMISSION_USER_ROLE VALUES(1, 2);
INSERT INTO PERMISSION_USER_ROLE VALUES(2, 3);
INSERT INTO PERMISSION_USER_ROLE VALUES(3, 1);
-- RECORDS
INSERT INTO PERMISSION_ROLE VALUES(1, 'name1');
INSERT INTO PERMISSION_ROLE VALUES(2, 'name2');
INSERT INTO PERMISSION_ROLE VALUES(3, 'name3');

----------------------------------
-- PERMISSION CONDITION USER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_USER_TABLE;
CREATE TABLE PERMISSION_CONDITION_USER_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', USER_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_USER_TABLE VALUES(1, 'Ada', 1);
INSERT INTO PERMISSION_CONDITION_USER_TABLE VALUES(2, 'Kate', 2);

----------------------------------
-- PERMISSION CONDITION USER TWO COLUMNS TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_USER2_TABLE;
CREATE TABLE PERMISSION_CONDITION_USER2_TABLE(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', CREATE_ID INT, UPDATE_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_USER2_TABLE VALUES(1, 'Ada', 1, 1);
INSERT INTO PERMISSION_CONDITION_USER2_TABLE VALUES(2, 'Kate', 2, 1);
INSERT INTO PERMISSION_CONDITION_USER2_TABLE VALUES(3, 'Kate', 10, 10);

----------------------------------
-- PERMISSION CONDITION ROLE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_ROLE_TABLE;
CREATE TABLE PERMISSION_CONDITION_ROLE_TABLE(ID INT PRIMARY KEY, USER_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_ROLE_TABLE VALUES(1, 1);
INSERT INTO PERMISSION_CONDITION_ROLE_TABLE VALUES(2, 2);
INSERT INTO PERMISSION_CONDITION_ROLE_TABLE VALUES(3, 3);
INSERT INTO PERMISSION_CONDITION_ROLE_TABLE VALUES(4, 1);

----------------------------------
-- PERMISSION CONDITION ROLE TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_ROLE2_TABLE;
CREATE TABLE PERMISSION_CONDITION_ROLE2_TABLE(ID INT PRIMARY KEY, CREATE_ID INT, UPDATE_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_ROLE2_TABLE VALUES(1, 1, 1);
INSERT INTO PERMISSION_CONDITION_ROLE2_TABLE VALUES(2, 2, 1);
INSERT INTO PERMISSION_CONDITION_ROLE2_TABLE VALUES(3, 3, 2);
INSERT INTO PERMISSION_CONDITION_ROLE2_TABLE VALUES(4, 1, 2);

----------------------------------
-- PERMISSION CONDITION EXPRESSION TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_EXPRESSION_TABLE;
CREATE TABLE PERMISSION_CONDITION_EXPRESSION_TABLE(ID INT PRIMARY KEY);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_EXPRESSION_TABLE VALUES(1);
INSERT INTO PERMISSION_CONDITION_EXPRESSION_TABLE VALUES(2);

----------------------------------
-- PERMISSION CONDITION USER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_USER_TABLE2;
CREATE TABLE PERMISSION_CONDITION_USER_TABLE2(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', USER_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_USER_TABLE2 VALUES(1, 'Ada', 1);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2 VALUES(2, 'Kata', 1);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2 VALUES(3, 'Kate', 3);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2 VALUES(4, 'Katt', 2);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2 VALUES(5, 'Katy', 2);

----------------------------------
-- PERMISSION CONDITION USER TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_CONDITION_USER_TABLE2_DETAIL;
CREATE TABLE PERMISSION_CONDITION_USER_TABLE2_DETAIL(ID INT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', CONDITION_USER_TABLE2_ID INT);

-- RECORDS
INSERT INTO PERMISSION_CONDITION_USER_TABLE2_DETAIL VALUES(1, 'Ada', 1);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2_DETAIL VALUES(2, 'Kata', 2);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2_DETAIL VALUES(3, 'Kate', 2);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2_DETAIL VALUES(4, 'Katt', 3);
INSERT INTO PERMISSION_CONDITION_USER_TABLE2_DETAIL VALUES(5, 'Katy', 4);

----------------------------------
-- PERMISSION NO TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_NO_TABLE;
CREATE TABLE PERMISSION_NO_TABLE(ID INT PRIMARY KEY, PERMISSION_ADD_TABLE_ID INT);

-- RECORDS
INSERT INTO PERMISSION_NO_TABLE VALUES(1, 1);


----------------------------------
-- PERMISSION COLUMN TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_COLUMN_TABLE;
CREATE TABLE PERMISSION_COLUMN_TABLE(ID INT AUTO_INCREMENT PRIMARY KEY, ALL_COLUMN INT, SELECT_COLUMN INT, INSERT_COLUMN INT, UPDATE_COLUMN INT, DELETE_COLUMN INT);

-- RECORDS
INSERT INTO PERMISSION_COLUMN_TABLE VALUES(1, 2, 3, 4, 5, 6);

----------------------------------
-- PERMISSION COLUMN JOIN TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_COLUMN_JOIN_TABLE;
CREATE TABLE PERMISSION_COLUMN_JOIN_TABLE(ID INT AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255) DEFAULT '', PERMISSION_COLUMN_TABLE_ID INT);

-- RECORDS
INSERT INTO PERMISSION_COLUMN_JOIN_TABLE VALUES(1, 'Kate', 1);

----------------------------------
-- PERMISSION COLUMN CONDITION TEST TABLES
----------------------------------
DROP TABLE IF EXISTS PERMISSION_COLUMN_CONDITION_TABLE;
CREATE TABLE PERMISSION_COLUMN_CONDITION_TABLE(ID INT AUTO_INCREMENT PRIMARY KEY, COLUMN_USER_1 INT, COLUMN_USER_2 INT, COLUMN_ROLE INT);

-- RECORDS
INSERT INTO PERMISSION_COLUMN_CONDITION_TABLE VALUES(1, 1, 1, 1);


----------------------------------
-- GLOBAL COLUMNS TIME TABLE
----------------------------------
DROP TABLE IF EXISTS GLOBAL_COLUMNS_TIME_TABLE;
CREATE TABLE GLOBAL_COLUMNS_TIME_TABLE(ID INT PRIMARY KEY, MILLISECOND BIGINT, MILLISECOND_STRING VARCHAR(255) DEFAULT '', TIMESTAMP TIMESTAMP);

-- SELECT_TABLE
INSERT INTO GLOBAL_COLUMNS_TIME_TABLE VALUES(1, 1573819744466, '1573819744466', '2019-11-15T20:09:04.466');


----------------------------------
-- CREATE VIEW
----------------------------------
CREATE VIEW TEST_VIEW AS SELECT * FROM SELECT_TABLE WHERE ID > 3;



